#!/bin/bash
if [ `whoami` = "root" ]; then
    sleep 1
else
    printf "Please run this script as root. Run sudo -i on ubuntu systems\n\n";
    exit 1
fi

ACTION=$1
DOMAIN=$2
GITREPO=$3
OWNERUSER=${DOMAIN%.*}
OWNERGROUP=$OWNERUSER
ADMINUSER=$(who am i | awk '{print $1}')
SITESENABLED='/etc/nginx/sites-enabled/'
SITESAVAILABLE='/etc/nginx/sites-available/'
WWWDIR='/srv/http/'
 
if [ "$ACTION" != 'create' ] && [ "$ACTION" != 'delete' ]
    then
		echo "You need to prompt for action (create or delete) -- Lower-case only"
		exit 1;
fi
 
while [ "$DOMAIN" == ""  ]
do
	echo -e "Please provide domain. e.g. dev,staging"
	read  DOMAIN
done
 
if [ "$ACTION" == 'create' ]; then
		### check if DOMAIN already exists
		if [ -e $SITESAVAILABLE$DOMAIN ]; then
			echo -e 'This DOMAIN already exists.\nPlease Try Another one'
			exit;
		fi
 
		### check if directory exists or not
		if ! [ -d $WWWDIR$DOMAIN ]; then
			### create the directory
			mkdir $WWWDIR$DOMAIN
			### give permission to root dir
			chmod 755 $WWWDIR$DOMAIN
			### write test file in the new DOMAIN dir
			if ! echo "<?php echo phpinfo(); ?>" > $WWWDIR$DOMAIN/phpinfo.php
			then
				echo "ERROR: Not able to write in file "$WWWDIR"/"$DOMAIN"/phpinfo.php. Please check permissions."
				exit;
			else
				echo "Added content to "$WWWDIR$DOMAIN"/phpinfo.php."
			fi
		fi
        
        ### Create domain's user and group
        adduser --gecos "" --disabled-password $OWNERUSER
        echo "$OWNERUSER:$OWNERUSER" | chpasswd "$OWNERUSER"
        sudo usermod -a -G $OWNERGROUP $ADMINUSER
        
        ### Create layout for the domain
        echo "Creating layout for the domain"
        mkdir -p /home/$OWNERUSER/{cgi-bin,etc/{php5},homes,logs,tmp}
        find /home/$OWNERUSER -type f -exec chown $OWNERUSER:$OWNERGROUP {} \;
        find /home/$OWNERUSER -type d -exec chown $OWNERUSER:$OWNERGROUP {} \;
        find /home/$OWNERUSER -type f -exec chmod 644 {} \;
        find /home/$OWNERUSER -type d -exec chmod 2775 {} \;
        ln -s /srv/http/$DOMAIN /home/$OWNERUSER/public_html
        
        #sudo find /srv/http/$VIRTUALSERVER_DOM -type f -exec chmod 660 {} \;
        #sudo find /srv/http/$VIRTUALSERVER_DOM -type d -exec chmod 2770 {} \;
        
		### create virtual host rules file
		if ! echo "server {
	listen   80;
	root $WWWDIR$DOMAIN;
	index index.php index.html index.htm;
	server_name $DOMAIN;

	# serve static files directly
	location ~* \.(jpg|jpeg|gif|css|png|js|ico|html)$ {
		access_log off;
		expires max;
	}

	# removes trailing slashes (prevents SEO duplicate content issues)
	if (!-d \$request_filename) {
		rewrite ^/(.+)/\$ /\$1 permanent;
	}

	# unless the request is for a valid file (image, js, css, etc.), send to bootstrap
	if (!-e \$request_filename) {
		rewrite ^/(.*)\$ /index.php?/\$1 last;
		break;
	}

	# removes trailing 'index' from all controllers
	if (\$request_uri ~* index/?\$) {
		rewrite ^/(.*)/index/?\$ /\$1 permanent;
	}

	# catch all
	error_page 404 /index.php;
	
	location ~ \.php$ {
		fastcgi_split_path_info ^(.+\.php)(/.+)\$;
		fastcgi_pass 127.0.0.1:9000;
		fastcgi_index index.php;
		include fastcgi_params;
	}

	location ~ /\.ht {
		deny all;
	}

}" > $SITESAVAILABLE$DOMAIN
		then
			echo -e 'There is an ERROR create $DOMAIN file'
			exit;
		else
			echo -e '\nNew Virtual Host Created\n'
		fi
 
		### Add DOMAIN in /etc/hosts
		if ! echo "127.0.0.1	$DOMAIN" >> /etc/hosts
		then
			echo "ERROR: Not able write in /etc/hosts"
			exit;
		else
			echo -e "Host added to /etc/hosts file \n"
		fi
 
		if [ "$ADMINUSER" == ""  ]; then
			chown -R $(whoami):www-data $WWWDIR$DOMAIN
		else
			chown -R $ADMINUSER:www-data $WWWDIR$DOMAIN
		fi

		### enable website
		ln -s $SITESAVAILABLE$DOMAIN $SITESENABLED$DOMAIN
 
		### restart Nginx
		service nginx restart
 
		### show the finished message
		echo -e "Complete! \nYou now have a new Virtual Host \nYour new host is: http://"$DOMAIN" \nAnd its located at "$WWWDIR$DOMAIN
		exit;
else
		### check whether DOMAIN already exists
		if ! [ -e $SITESAVAILABLE$DOMAIN ]; then
			echo -e 'This DOMAIN dont exists.\nPlease Try Another one'
			exit;
		else
			### Delete DOMAIN in /etc/hosts
			newhost=${DOMAIN//./\\.}
			sed -i "/$newhost/d" /etc/hosts

			### disable website
			rm $SITESENABLED$DOMAIN
	 
			### restart Nginx
			service nginx restart

			### Delete virtual host rules files
			rm $SITESAVAILABLE$DOMAIN
		fi
 
		### check if directory exists or not
		if [ -d $WWWDIR$DOMAIN ]; then
			echo "The user and group $OWNERUSER will be deleted and the following directory will be removed: \n /home/$OWNERUSER, /srv/http/$DOMAIN. Are you sure? (yes/no)"
			read deldir

			if [ "$deldir" == 'yes' -o "$deldir" == 'yes' ]; then
				### Delete the directory
				rm -rf $WWWDIR$DOMAIN
				rm -rf /home/$OWNERUSER
				echo -e 'Directory deleted'
                deluser $OWNERUSER
                deluser --group $OWNERGROUP
				echo -e 'User deleted'
			else
				echo -e 'Host directory conserved'
			fi
		else
			echo -e 'Host directory not found. Ignored'
		fi
 
		### show the finished message
		echo -e "Complete!\nYou just removed Virtual Host "$DOMAIN
		exit 0;
fi
